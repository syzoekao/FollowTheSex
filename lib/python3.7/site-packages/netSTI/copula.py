import numpy as np
from scipy import stats
import netSTI.mydata as data


class Copula:
	def __init__(self, Npop, n_yrs = 10000, independent = False):
		self.Npop = Npop
		corrcoef = 0
		if independent == False: 
			if n_yrs <= 20: 
				corrcoef = -0.67
			elif n_yrs == 30: 
				corrcoef = -0.5
			else: 
				corrcoef = -0.4
		self.corrcoef = corrcoef
		mvnorm = stats.multivariate_normal(mean=[0, 0], 
			cov=[[1., self.corrcoef], [self.corrcoef, 1.]])
		# Generate random samples from multivariate normal with correlation .5
		x = mvnorm.rvs(self.Npop)
		norm = stats.norm()
		self.x_unif = norm.cdf(x)	 


class CopulaDist(Copula): 
	def __init__(self, Npop, n_yrs = 10000, independent = False): 
		super().__init__(Npop, n_yrs, independent)

	def get_avg_duration(self): 
		x2_cdf = np.cumsum(data.SexBehavior().dur_dist)
		dum_mat = (np.tile(x2_cdf, (self.x_unif.shape[0], 1)) <= np.tile(self.x_unif[:, 1], (x2_cdf.shape[0], 1)).T) * \
			np.tile(np.arange(x2_cdf.shape[0]), (self.x_unif.shape[0], 1))
		return np.max(dum_mat, axis = 1) 

	def get_degree_power_law(self, n_yrs): 
		if n_yrs == 10: 
			x1_cdf = np.cumsum(data.PowerLawDD().plDist10yr)
			x1_nPart = data.PowerLawDD().nPart10yr
		elif n_yrs == 20: 
			x1_cdf = np.cumsum(data.PowerLawDD().plDist20yr)
			x1_nPart = data.PowerLawDD().nPart20yr
		else: 
			x1_cdf = np.cumsum(data.PowerLawDD().plDist30yr)
			x1_nPart = data.PowerLawDD().nPart30yr
		dum_mat = (np.tile(x1_cdf, (self.x_unif.shape[0], 1)) <= np.tile(self.x_unif[:, 0], (x1_cdf.shape[0], 1)).T) * \
			np.tile(np.arange(x1_cdf.shape[0]), (self.x_unif.shape[0], 1))
		x1_trans = np.max(dum_mat, axis = 1)
		return x1_nPart[x1_trans]

	def get_degree_poisson(self, Ndegree): 
		m1 = stats.poisson(Ndegree)
		x1_trans = m1.ppf(self.x_unif[:, 0])
		return x1_trans		


'''
import seaborn as sns
import matplotlib as mpl
print(mpl.rcParams['backend'])
mpl.use('TkAgg')
import matplotlib.pyplot as plt
plt.get_backend()
import os
os.chdir("/Users/szu-yukao/Documents/Network_structure_and_STI/networkSTI")
cwd = os.getcwd()
print(cwd)

h = sns.jointplot(x1_trans, x2_trans, kind='kde', stat_func=None);
h.set_axis_labels('# of partners', 'duration of relationship', fontsize=12)
plt.savefig('results/copula.eps', format='eps', dpi=1000)
'''

